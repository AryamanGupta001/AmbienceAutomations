To make sure visitors can raise a quote by sending a message through your form, follow these steps:

### 1. **Set Up the Front-End Form**
   - Your form is already well-structured in the HTML code you provided. Just make sure the `<form>` tag includes the `action` attribute pointing to your server-side script:
     ```html
     <form id="contact-form" method="post" action="send_email.php">
     ```

### 2. **Create the Server-Side Script**
   - Use PHP to handle the form data and send it via email. Here's an example `send_email.php` script for your case:

     ```php
     <?php
     if ($_SERVER["REQUEST_METHOD"] == "POST") {
         $name = htmlspecialchars($_POST['name']);
         $email = htmlspecialchars($_POST['email']);
         $message = htmlspecialchars($_POST['message']);

         $to = "your-email@example.com"; // Replace with your receiving email
         $subject = "Quote Request from $name";
         $headers = "From: $email\r\n";
         $headers .= "Reply-To: $email\r\n";

         // Email body
         $body = "Quote Request Details:\n\n";
         $body .= "Name: $name\n";
         $body .= "Email: $email\n";
         $body .= "Message: $message\n";

         // Send the email
         if (mail($to, $subject, $body, $headers)) {
             echo "Message sent successfully!";
         } else {
             echo "Error: Unable to send message. Please try again.";
         }
     }
     ?>
     ```

   - Save this file as `send_email.php` in your project directory.

### 3. **Configure SMTP (Recommended for Reliable Delivery)**
   - Since you're using Microsoft-provided emails, configure SMTP for better reliability. Use a library like **PHPMailer** for easier integration.

     Example using PHPMailer:
     ```php
     use PHPMailer\PHPMailer\PHPMailer;
     use PHPMailer\PHPMailer\Exception;

     require 'vendor/autoload.php';

     $mail = new PHPMailer(true);

     try {
         $mail->isSMTP();
         $mail->Host = 'smtp.office365.com';
         $mail->SMTPAuth = true;
         $mail->Username = 'your-email@example.com'; // Your email
         $mail->Password = 'your-app-password'; // App Password
         $mail->SMTPSecure = 'tls';
         $mail->Port = 587;

         $mail->setFrom('your-email@example.com', 'Ambience Automations');
         $mail->addAddress('recipient@example.com'); // Receiving email

         $mail->Subject = 'Quote Request from Contact Form';
         $mail->Body = 'Contact form submission details here...';

         $mail->send();
         echo 'Message sent successfully';
     } catch (Exception $e) {
         echo "Error: {$mail->ErrorInfo}";
     }
     ```

   - Make sure to replace placeholders like `your-email@example.com` and `your-app-password` with actual credentials.

### 4. **Test the Form**
   - Submit the form from your website and verify that the message reaches your configured email inbox.
   - Debug any issues using server logs or by displaying errors temporarily in the PHP script.

### 5. **Secure Your Form**
   - Add input validation to prevent spam or malicious submissions (e.g., using `filter_var()` for sanitization).
   - Use CAPTCHA (like Google reCAPTCHA) for added security.

### 6. **Optimize User Experience**
   - Provide clear feedback on form submission (e.g., a success or error message).
   - Consider redirecting users to a "Thank You" page after successful submissions.

If you need guidance on implementing the SMTP configuration or debugging, feel free to ask!
